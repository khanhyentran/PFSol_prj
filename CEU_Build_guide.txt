******************************** Stream It Build guide ***********************************************
This guideline shows how to build BSP packages for Stream It board on Linux 4.14 and apply CEU driver

******************************************************************************************************

*** Build BSP packages Linux 4.14 ***

1. Clone BSP packages:
	$ git clone https://github.com/renesas-rz/rza_linux-4.14_bsp
	$ cd rza_linux-4.14_bsp

2. Update the u-boot and kernel source inside the BSP by pulling updates from github
	$ ./build.sh update u
	$ ./build.sh update k

3. Configure for building Stream It board:
	$ ./build.sh config
	change the Target Board selection (the first item in list) from RSKRZA1 to Stream it
	Select Save (the last item in the list)
	
4. Build buildroot:

	$ ./build.sh buildroot
	There are prompt:
		1. buildroot-2017.02 (Long Term Support)
		(select number)=>
	Select 1 to choose buildroot-2017.02
		What would you like to do?
		1. Use the default Linaro toolchain (recommended)
		2. Install Buildroot and then let me decide in the configuration menu (advanced)
		=>  Enter your choice (1 or 2):
	Select 1 to choose Linaro toolchain

5. Build u-boot, kernel and device tree:

	$ ./build.sh u-boot
	$ ./build.sh kernel xipImage
	$ ./build.sh kernel dtbs

6. Apply patch file of CEU driver
	Copy patch files of CEU driver to kernel directory (output/linux-4.14)
	$ cd output/linux-4.14
	$ patch -p1 < 0001-Add-CEU-driver-soure-code-for-Linux-4.14.patch
	$ patch -p1 < 0002-Stream-It-modify-device-tree-to-support-CEU-driver.patch

7. Enable CEU driver in menuconfig

	$ ./build kernel menuconfig
	Enable below items:

	Device Drivers > Multimedia support > Cameras/video grabbers support
	Device Drivers > Multimedia support > V4L platform devices -> Renesas Capture Engine Unit (CEU) driver

8. Rebuild kernel and device tree
	$ ./build kernel xipImage
	$ ./build kernel dtbs

*** Program binary files to board ***
1. Program u-boot:
	$ ./build.sh jlink u-boot
	
2. Program device tree:
	$ ./build.sh jlink dtb

3. Program XIP kernel:
	$ ./build.sh jlink xipImage
	After download, enter these u-boot commands to copy from RAM to SPI flash
	=> sf probe 0 ; sf erase 200000 500000 ; sf write 0c000000 200000 500000

4. Program filesystem:
	$ ./build.sh jlink rootfs_axfs.bin
	After download, enter these u-boot commands to copy from RAM to SPI flash
	=> sf probe 0 ; sf erase 00800000 C00000 ; sf write 0x0C000000 00800000 C00000

*** Program binary files to board (use pre-build package on Window environment)***
	On Window, go to J-Link_QSPI_Program folder
	Run Program_QSPI.bat then input 1, 2, 4, 6, 9 (Program u-boot, device tree, XIP kernel, filesystem)
	
*** Booting the board ***
	In u-boot, type:
	 => run xsa_boot
	 
-- End --



