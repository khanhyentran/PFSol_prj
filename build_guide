********************************************************************
Building Environment for RZ/A2M Evaluation Board
********************************************************************

1. Prepare environment to build:
	$ tar -xvf 4.19rc7_based_BSP/rza_linux-4.19_bsp.tar.gz -C ./
	$ cd rza_linux-4.19_bsp
	$ export WORK=$(pwd)

	$ ./build.sh config
	Go to target board and Enter 
	Select "rza2mevb RZ/A2M Eval Board (RZ/A2M)", then Save.

2. Building Buildroot:
	$ ./build.sh buildroot
		1. buildroot-2017.02 (Long Term Support)
		2. buildroot-2018.02 (Long Term Support)
		=> Choose "2"
		1. Use the default Linaro toolchain (recommended)
		2. Install Buildroot and then let me decide in the configuration menu (advanced)
		=> Choose "1"
Note: It maybe take a bit time to download and build buildroot
3. Building U-boot:
	$ ./build.sh u-boot

4. Building Kernel:
	$ cd $WORK/output
	$ git clone https://git.kernel.org/pub/scm/linux/kernel/git/geert/renesas-drivers.git linux-4.19
	$ cd linux-4.19
	$ git checkout master
	$ mkdir -p fs/axfs
	$ cd fs/axfs
	$ git clone https://github.com/jaredeh/axfs.git .
	$ cd $WORK/output/linux-4.19
	$ mkdir -p z_patches

	Copy "renesas-drivers-2018-10-09-v4.19-rc7_2018_10_10.txz" to "z_patches" directory and untar.
	$ cp ../../../4.19rc7_based_BSP/renesas-drivers-2018-10-09-v4.19-	rc7_2018_10_10.txz ./z_patches
	$ cd z_patches/
	$ tar xvf renesas-drivers-2018-10-09-v4.19-rc7_2018_10_10.txz
	$ cd ../
	$ git checkout -b rza2m_2018_10_10
	$ git am z_patches/renesas-drivers-2018-10-09-v4.19-rc7_2018_10_10/00*.patch
	$ git am z_patches/renesas-drivers-2018-10-09-v4.19-rc7_2018_10_10/untracked.patch
	$ cd $WORK

	$ ./build.sh kernel rza2mevb_xip_defconfig
	$ ./build.sh kernel xipImage

5. Deloy to RZA2MEVB Board:
	Binary files is located at:
		U-boot: 		$WORK/output/u-boot-2017.05/u-boot.bin
		Device tree:	$WORK/output/linux-4.19/arch/arm/boot/dts/r7s9210-rza2mevb.dtb
		Kernel:			$WORK/output/linux-4.19/arch/arm/boot/xipImage
		File system:	$WORK/output/buildroot-2018.02/output/images/rootfs.axfs

	Program to QSPI:
		./build.sh jlink u-boot
		./build.sh jlink rootfs_axfs 0x20800000
		./build.sh jlink dtb
		./build.sh jlink xipImage 0x20200000

6. Booting
	=> run xha_boot
